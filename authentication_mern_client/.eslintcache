[{"I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\index.js":"1","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\App.js":"2","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\core\\Layout.js":"3","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\Routes.js":"4","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\SIgnup.js":"5","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\Signin.js":"6","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\Activate.js":"7","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\helpers.js":"8","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\core\\Private.js":"9","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\PrivateRoute.js":"10","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\core\\Admin.js":"11","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\AdminRoute.js":"12","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\Forgot.js":"13","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\Reset.js":"14","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\Google.js":"15","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\Facebook.js":"16"},{"size":156,"mtime":1608210797094,"results":"17","hashOfConfig":"18"},{"size":623,"mtime":1608833380333,"results":"19","hashOfConfig":"18"},{"size":2533,"mtime":1608780177703,"results":"20","hashOfConfig":"18"},{"size":1230,"mtime":1608832781957,"results":"21","hashOfConfig":"18"},{"size":2793,"mtime":1608833293921,"results":"22","hashOfConfig":"18"},{"size":3203,"mtime":1608890165096,"results":"23","hashOfConfig":"18"},{"size":1831,"mtime":1608788120086,"results":"24","hashOfConfig":"18"},{"size":1986,"mtime":1608790662409,"results":"25","hashOfConfig":"18"},{"size":3904,"mtime":1608790777109,"results":"26","hashOfConfig":"18"},{"size":406,"mtime":1608778944363,"results":"27","hashOfConfig":"18"},{"size":3893,"mtime":1608791595159,"results":"28","hashOfConfig":"18"},{"size":431,"mtime":1608788189060,"results":"29","hashOfConfig":"18"},{"size":2192,"mtime":1608829567845,"results":"30","hashOfConfig":"18"},{"size":2554,"mtime":1608835479287,"results":"31","hashOfConfig":"18"},{"size":1449,"mtime":1608870178400,"results":"32","hashOfConfig":"18"},{"size":1422,"mtime":1608874905640,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1wmr1b9",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\index.js",[],["74","75"],"I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\App.js",[],"I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\core\\Layout.js",[],"I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\Routes.js",[],"I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\SIgnup.js",[],"I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\Signin.js",[],"I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\Activate.js",["76","77"],"import React, { useState, useEffect} from 'react'\r\n// import {Link, Redirect} from 'react-router-dom'\r\nimport Layout from '../core/Layout'\r\nimport axios from 'axios'\r\nimport jwt from 'jsonwebtoken'\r\nimport {ToastContainer, toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.min.css'\r\n\r\nconst Activate = ({match}) => {\r\n\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        token:'',\r\n        show:true\r\n    });\r\n\r\n    useEffect(() =>{\r\n        let token = match.params.token\r\n        let {name} = jwt.decode(token)\r\n        if(token){\r\n            setValues({...values, name, token})\r\n        }\r\n\r\n    }, [])\r\n\r\n    const { name, token, show} = values;\r\n\r\n \r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault()\r\n        axios({\r\n            method: 'POST',\r\n            url:`${process.env.REACT_APP_API}/account-activation`,\r\n            data: { token }\r\n        })\r\n        .then(response => {\r\n            console.log('Account activation',response)\r\n            setValues({...values, show: false})\r\n            toast.success(response.data.message)\r\n        })\r\n        .catch(error => {\r\n            console.log('Account activation error', error.response.data.error)\r\n            toast.error(error.response.data.error)\r\n        })\r\n    }    \r\n\r\n    const activationLink = () => (\r\n        <div className=\"text-center\">\r\n            <h1 className=\"p-5 text-center\">Hey {name}, Ready to activate ur account</h1>\r\n            <button className=\"btn btn-outline-primary\" onClick={clickSubmit}>Activate account</button>\r\n        </div>\r\n    )\r\n    return(\r\n        <Layout>\r\n            <div className=\"col-md-6 offset-md-3\">\r\n                <ToastContainer />\r\n                {activationLink()}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Activate;\r\n\r\n","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\helpers.js",[],"I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\core\\Private.js",["78"],"import React, { useState, useEffect} from 'react'\r\n// import {Link, Redirect} from 'react-router-dom'\r\nimport Layout from './Layout'\r\nimport axios from 'axios'\r\nimport {getCookie, isAuth, signout, updateUser} from '../auth/helpers'\r\nimport {ToastContainer, toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.min.css'\r\n\r\nconst Private = ({history}) => {\r\n\r\n    const [values, setValues] = useState({\r\n        role:'',\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        buttonText:'Submit'\r\n    });\r\n\r\n    const token = getCookie('token')\r\n\r\n    useEffect(() => {\r\n        loadProfile()\r\n    }, [])\r\n\r\n    const loadProfile = () => {\r\n        axios({\r\n            method: 'GET',\r\n            url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\r\n            headers:{\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log('private profile update', response)\r\n            const {role, name, email} = response.data\r\n            setValues({...values, role, name, email})\r\n        })\r\n        .catch(err => {\r\n            console.log('update error',err )\r\n            if(err.response.status === 401){\r\n                signout(() => {\r\n                    history.push(\"/\")\r\n                })\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    const {role, name, email, password, buttonText} = values;\r\n\r\n    const handleChange = (name) => (event) =>{\r\n        setValues({...values, [name]:event.target.value})\r\n    }\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault()\r\n        setValues({...values, buttonText: 'Submitting'})\r\n        axios({\r\n            method: 'PUT',\r\n            url:`${process.env.REACT_APP_API}/user/update`,\r\n            headers:{\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            data: {name, password}\r\n        })\r\n        .then(response => {\r\n            console.log('Private Profile Update sucess ',response)\r\n            updateUser(response, () => {\r\n                setValues({...values, buttonText: 'Submitted'})\r\n                toast.success(\"Profile updated successfully\")\r\n            })\r\n            \r\n        })\r\n        .catch(error => {\r\n            console.log('Private Profile Update error ', error.response.data.error)\r\n            setValues({...values, buttonText: 'Submit'})\r\n            toast.error(error.response.data.error)\r\n        })\r\n    }\r\n\r\n    const updateForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">role</label>\r\n                <input onChange={handleChange('name')} value={role} type=\"text\" className=\"form-control\" disabled />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} value={name} type=\"text\" className=\"form-control\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">email</label>\r\n                <input onChange={handleChange('email')} value={email} type=\"email\" className=\"form-control\" disabled />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">password</label>\r\n                <input onChange={handleChange('password')} value={password} type=\"password\" className=\"form-control\" />\r\n            </div>\r\n\r\n        <div>\r\n            <button className=\"btn btn-primary\" onClick={clickSubmit}>{buttonText}</button>\r\n        </div>\r\n\r\n        </form>\r\n    )\r\n\r\n    return(\r\n        <Layout>\r\n            <ToastContainer />\r\n            <h1 className=\"pt-5 text-center\">Private</h1>\r\n            <p className=\"lead text-center\">Profile update</p>\r\n            {updateForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Private;\r\n\r\n","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\PrivateRoute.js",["79"],"import React, { Component } from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport {isAuth} from './helpers'\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => (\r\n    <Route {...rest} render={\r\n        props => \r\n            isAuth() ? (<Component {...props}/>) :  ( <Redirect to={{ pathname:'/signin',state: {from:props.location}}}/> )\r\n    } />\r\n)\r\n\r\nexport default PrivateRoute","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\core\\Admin.js",["80"],"import React, { useState, useEffect} from 'react'\r\n// import {Link, Redirect} from 'react-router-dom'\r\nimport Layout from './Layout'\r\nimport axios from 'axios'\r\nimport {getCookie, isAuth, signout, updateUser} from '../auth/helpers'\r\nimport {ToastContainer, toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.min.css'\r\n\r\nconst Admin = ({history}) => {\r\n\r\n    const [values, setValues] = useState({\r\n        role:'',\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        buttonText:'Submit'\r\n    });\r\n\r\n    const token = getCookie('token')\r\n\r\n    useEffect(() => {\r\n        loadProfile()\r\n    }, [])\r\n\r\n    const loadProfile = () => {\r\n        axios({\r\n            method: 'GET',\r\n            url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\r\n            headers:{\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log('Admin profile update', response)\r\n            const {role, name, email} = response.data\r\n            setValues({...values, role, name, email})\r\n        })\r\n        .catch(err => {\r\n            console.log('update error',err )\r\n            if(err.response.status === 401){\r\n                signout(() => {\r\n                    history.push(\"/\")\r\n                })\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    const {role, name, email, password, buttonText} = values;\r\n\r\n    const handleChange = (name) => (event) =>{\r\n        setValues({...values, [name]:event.target.value})\r\n    }\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault()\r\n        setValues({...values, buttonText: 'Submitting'})\r\n        axios({\r\n            method: 'PUT',\r\n            url:`${process.env.REACT_APP_API}/admin/update`,\r\n            headers:{\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            data: {name, password}\r\n        })\r\n        .then(response => {\r\n            console.log('Admin Profile Update sucess ',response)\r\n            updateUser(response, () => {\r\n                setValues({...values, buttonText: 'Submitted'})\r\n                toast.success(\"Profile updated successfully\")\r\n            })\r\n            \r\n        })\r\n        .catch(error => {\r\n            console.log('Admin Profile Update error ', error.response.data.error)\r\n            setValues({...values, buttonText: 'Submit'})\r\n            toast.error(error.response.data.error)\r\n        })\r\n    }\r\n\r\n    const updateForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">role</label>\r\n                <input onChange={handleChange('name')} value={role} type=\"text\" className=\"form-control\" disabled />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} value={name} type=\"text\" className=\"form-control\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">email</label>\r\n                <input onChange={handleChange('email')} value={email} type=\"email\" className=\"form-control\" disabled />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">password</label>\r\n                <input onChange={handleChange('password')} value={password} type=\"password\" className=\"form-control\" />\r\n            </div>\r\n\r\n        <div>\r\n            <button className=\"btn btn-primary\" onClick={clickSubmit}>{buttonText}</button>\r\n        </div>\r\n\r\n        </form>\r\n    )\r\n\r\n    return(\r\n        <Layout>\r\n            <ToastContainer />\r\n            <h1 className=\"pt-5 text-center\">Admin</h1>\r\n            <p className=\"lead text-center\">Profile update</p>\r\n            {updateForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Admin;\r\n\r\n","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\AdminRoute.js",["81"],"import React, { Component } from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport {isAuth} from './helpers'\r\n\r\nconst AdminRoute = ({component: Component, ...rest}) => (\r\n    <Route {...rest} render={\r\n        props => \r\n            isAuth() && isAuth().role === 'admin' ? (<Component {...props}/>) :  ( <Redirect to={{ pathname:'/signin',state: {from:props.location}}}/> )\r\n    } />\r\n)\r\n\r\nexport default AdminRoute","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\Forgot.js",["82","83"],"import React, { useState} from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport Layout from '../core/Layout'\r\nimport axios from 'axios'\r\nimport {ToastContainer, toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.min.css'\r\n\r\nconst Forgot = ({history}) => {\r\n\r\n    const [values, setValues] = useState({\r\n        email:'',\r\n        buttonText:'Request password reset link'\r\n    });\r\n\r\n    const { email, buttonText} = values;\r\n\r\n    const handleChange = (name) => (event) =>{\r\n        setValues({...values, [name]:event.target.value})\r\n    }\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault()\r\n        setValues({...values, buttonText: 'Submitting'})\r\n        // const abortController = new AbortController()\r\n        // const signal = abortController.signal\r\n\r\n        axios({\r\n            method: 'PUT',\r\n            url:`${process.env.REACT_APP_API}/forgot-password`,\r\n            data: { email}            \r\n        })\r\n        .then(response => {\r\n            console.log('Forgot password sucess ',response)\r\n            toast.success(response.data.message)\r\n            setValues({...values, buttonText: 'Requested'})\r\n        })\r\n        .catch(error => {\r\n            console.log('Forgot password error', error.response)\r\n            toast.error(error.response.data.error)\r\n            setValues({...values, buttonText: 'Request password reset link'})\r\n        })\r\n\r\n        // function cleanup() {\r\n        //     abortController.abort()\r\n        // }\r\n    }\r\n\r\n    const passwordForgotForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">email</label>\r\n                <input onChange={handleChange('email')} value={email} type=\"email\" className=\"form-control\" />\r\n            </div>\r\n\r\n        <div>\r\n            <button className=\"btn btn-primary\" onClick={clickSubmit}>{buttonText}</button>\r\n        </div>\r\n\r\n        </form>\r\n    )\r\n\r\n    return(\r\n        <Layout>\r\n            <ToastContainer />\r\n            <h1 className=\"p-5 text-center\">Forgot password</h1>\r\n            {passwordForgotForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Forgot;\r\n\r\n","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\Reset.js",["84","85","86"],"import React, { useEffect, useState} from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport Layout from '../core/Layout'\r\nimport axios from 'axios'\r\nimport jwt from 'jsonwebtoken'\r\nimport {ToastContainer, toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.min.css'\r\n\r\nconst Reset = ({match}) => {\r\n\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        token:'',\r\n        newPassword:'',\r\n        buttonText:'Reset Password'\r\n    });\r\n\r\n    useEffect(() => {\r\n        let token = match.params.token\r\n        let {name} = jwt.decode(token)\r\n        if(token){\r\n            setValues({...values, name, token})\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n    const { name, token, newPassword, buttonText} = values;\r\n\r\n    const handleChange = (event) =>{\r\n        setValues({...values, newPassword: event.target.value})\r\n    }\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault()\r\n        setValues({...values, buttonText: 'Submitting'})\r\n        // const abortController = new AbortController()\r\n        // const signal = abortController.signal\r\n\r\n        axios({\r\n            method: 'PUT',\r\n            url:`${process.env.REACT_APP_API}/reset-password`,\r\n            data: { newPassword, resetPasswordLink : token }            \r\n        })\r\n        .then(response => {\r\n            console.log('Reset password sucess ',response)\r\n            toast.success(response.data.message)\r\n            setValues({...values, buttonText: 'Done'})\r\n        })\r\n        .catch(error => {\r\n            console.log('Reset password error', error.response)\r\n            toast.error(error.response.data.error)\r\n            setValues({...values, buttonText: 'Reset Password'})\r\n        })\r\n\r\n        // function cleanup() {\r\n        //     abortController.abort()\r\n        // }\r\n    }\r\n\r\n    const passwordResetForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">New password</label>\r\n                <input onChange={handleChange} value={newPassword} type=\"password\" placeholder=\"Type new password\" className=\"form-control\" required />\r\n            </div>\r\n\r\n        <div>\r\n            <button className=\"btn btn-primary\" onClick={clickSubmit}>{buttonText}</button>\r\n        </div>\r\n\r\n        </form>\r\n    )\r\n\r\n    return(\r\n        <Layout>\r\n            <ToastContainer />\r\n            <h1 className=\"p-5 text-center\">Hey {name}, type your new password</h1>\r\n            {passwordResetForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Reset;\r\n\r\n","I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\Google.js",[],"I:\\projects\\mern_learning\\mern_full_authentication\\client\\src\\auth\\Facebook.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":24,"column":8,"nodeType":"93","endLine":24,"endColumn":10,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":26,"column":26,"nodeType":"97","messageId":"98","endLine":26,"endColumn":30},{"ruleId":"91","severity":1,"message":"99","line":23,"column":8,"nodeType":"93","endLine":23,"endColumn":10,"suggestions":"100"},{"ruleId":"95","severity":1,"message":"101","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"99","line":23,"column":8,"nodeType":"93","endLine":23,"endColumn":10,"suggestions":"102"},{"ruleId":"95","severity":1,"message":"101","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"103","line":2,"column":9,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"104","line":2,"column":15,"nodeType":"97","messageId":"98","endLine":2,"endColumn":23},{"ruleId":"95","severity":1,"message":"103","line":2,"column":9,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"104","line":2,"column":15,"nodeType":"97","messageId":"98","endLine":2,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":25,"column":7,"nodeType":"93","endLine":25,"endColumn":9,"suggestions":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.params.token' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["108"],"no-unused-vars","'show' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'loadProfile'. Either include it or remove the dependency array.",["109"],"'Component' is defined but never used.",["110"],"'Link' is defined but never used.","'Redirect' is defined but never used.",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},{"desc":"112","fix":"117"},"Update the dependencies array to be: [match.params.token, values]",{"range":"118","text":"119"},"Update the dependencies array to be: [loadProfile]",{"range":"120","text":"121"},{"range":"122","text":"121"},{"range":"123","text":"119"},[644,646],"[match.params.token, values]",[631,633],"[loadProfile]",[629,631],[681,683]]